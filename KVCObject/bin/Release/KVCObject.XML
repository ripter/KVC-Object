<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KVCObject</name>
    </assembly>
    <members>
        <member name="T:org.zensoftware.observeValueForKey">
            <summary>
            Delegate to observe changes in keys
            </summary>
            <param name="forKey">The key that was observed.</param>
            <param name="forObject">The object the key belongs to.</param>
            <param name="oldValue">The key's old value.</param>
            <param name="newValue">The key's new value.</param>
        </member>
        <member name="T:org.zensoftware.KVCObject">
            <summary>
            An implimentation of Objective-C's Key Value coding.
            By Chris Richards 2009.
            </summary>
        </member>
        <member name="M:org.zensoftware.KVCObject.valueForKey(System.String)">
            <summary>
            Get the value for a specified key.
            If key doesn't exist, valueForUndefinedKey(string key) will be called instead.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:org.zensoftware.KVCObject.valueForKeyPath(System.String)">
            <summary>
            Get the value for a specified key in the keyPath. 
            All objects in the path *MUST* inherit from KVCObject for the path to be followed.
            </summary>
            <param name="keyPath">A Period seprated list of Key values.</param>
            <returns></returns>
        </member>
        <member name="M:org.zensoftware.KVCObject.valueForUndefinedKey(System.String)">
            <summary>
            Called when a key doesn't exist.
            Override to impliment your own error handling.
            </summary>
            <param name="key"></param>
            <returns>null</returns>
        </member>
        <member name="M:org.zensoftware.KVCObject.setValueForKey(System.String,System.Object)">
            <summary>
            Set a value for the key
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:org.zensoftware.KVCObject.setValueForKeyPath(System.String,System.Object)">
            <summary>
            Set the value for a keyPath.
            All objects in the path *MUST* inherit from KVCObject for the path to be followed.
            </summary>
            <param name="keyPath">A Period seprated list of Key values</param>
            <param name="value"></param>
        </member>
        <member name="M:org.zensoftware.KVCObject.addObserverForKey(System.String,org.zensoftware.observeValueForKey)">
            <summary>
            Add an observer for when the Key changes.
            </summary>
            <param name="key">The key you want to watch</param>
            <param name="observer">delegate observeValueForKey</param>
        </member>
        <member name="M:org.zensoftware.KVCObject.addObserverForKeyPath(System.String,org.zensoftware.observeValueForKey)">
            <summary>
            Add an observer when the key changes on the key path.
            All objects in the path *MUST* inherit from KVCObject for the path to be followed.
            </summary>
            <param name="keyPath">A Period seprated list of Key values</param>
            <param name="observer"></param>
        </member>
        <member name="M:org.zensoftware.KVCObject.removeObserverForKey(System.String,org.zensoftware.observeValueForKey)">
            <summary>
            Remove an observer from the Key changes.
            </summary>
            <param name="key"></param>
            <param name="observer"></param>
        </member>
        <member name="M:org.zensoftware.KVCObject.removeObserverForKeyPath(System.String,org.zensoftware.observeValueForKey)">
            <summary>
            Remove an observer from the Key changes.
            All objects in the path *MUST* inherit from KVCObject for the path to be followed.
            </summary>
            <param name="keyPath"></param>
            <param name="observer"></param>
        </member>
        <member name="M:org.zensoftware.KVCObject.keys">
            <summary>
            Returns a list of all the known keys.
            </summary>
            <returns></returns>
        </member>
        <member name="M:org.zensoftware.KVCObject.hasKeys">
            <summary>
            Returns True if there are any Keys defined.
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
